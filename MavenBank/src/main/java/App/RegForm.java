package App;

import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;

public class RegForm extends javax.swing.JFrame {

    /**
     * Creates new form Login_Form
     */
    public RegForm() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    // felhasználónév ellenőrzés illetve hogy használt-e
    private boolean userNameCheck(String username) throws Exception {
        if (!username.matches("^\\S{4,20}")) {
            throw new MyExceptions.BadUserName();
        }
        return true;
    }

    // megnézi a jelszó erősségét
    private boolean pwCheck(String pw, String pw2) throws Exception {
        // megnézi hogy a két jelszó mező tartalma megegyezik-e
        if (!pw.equals(pw2)) {
            throw new MyExceptions.DiffPw();
        }

        // megnézi hogy a jelszó tartalmaz-e speciális karaktert
        // regex jelölések: https://www.vogella.com/tutorials/JavaRegularExpressions/article.html
        // regex online tester: https://www.freeformatter.com/java-regex-tester.html
        Pattern pattern = Pattern.compile("[^a-zA-Z0-9]");
        Matcher matcher = pattern.matcher(pw);
        boolean isSpecial = matcher.find();
        if (!isSpecial) {
            throw new MyExceptions.NoSpecial();
        }
        // megnézi hogy a jelszó hosszabb-e mint 11 karakter
        if (pw.length() < 12) {
            throw new MyExceptions.Short();
        }
        //  megnézi hogy a jelszó tartalmaz-e nagybetűt
        boolean UC = false;
        for (int i = 0; i < pw.length(); i++) {
            if (Character.isUpperCase(pw.charAt(i))) {
                UC = true;
            }
        }
        if (!UC) {
            throw new MyExceptions.NoUpperc();
        }
        // megnézi hogy a jelszó tartalmaz-e kisbetűt
        boolean LC = false;
        for (int i = 0; i < pw.length(); i++) {
            if (Character.isLowerCase(pw.charAt(i))) {
                LC = true;
            }
        }
        if (!LC) {
            throw new MyExceptions.NoLowerC();
        }
        // megnézi hogy a jelszó tartalmaz-e számot
        boolean N = false;
        for (int i = 0; i < pw.length(); i++) {
            if (Character.isDigit(pw.charAt(i))) {
                N = true;
            }
        }
        if (!N) {
            throw new MyExceptions.NoNumber();
        }
        // megnézi hogy a jelszó tartalmaz-e szóközt
        N = false;
        for (int i = 0; i < pw.length(); i++) {
            if (Character.isSpaceChar(pw.charAt(i))) {
                N = true;
            }
        }
        if (N) {
            throw new MyExceptions.Space();
        }
        // igazat ad vissza a jelszó megfelelő
        return true;
    }

    // email valóságnak megfelelő-e (javax.mail)
    private boolean emailCheck(String mail) {
        boolean result = true;
        try {
            InternetAddress email = new InternetAddress(mail);
            email.validate();
        } catch (AddressException ex) {
            result = false;
            JOptionPane.showMessageDialog(null, "Nem megfelelő e-mail cím.");
        }
        return result;
    }

    // telefonszám ellenőrzése
    private boolean phoneNumCheck(String phoneNum) throws Exception {
        // regex jelölések: https://www.vogella.com/tutorials/JavaRegularExpressions/article.html
        // regex online tester: https://www.freeformatter.com/java-regex-tester.html
        Pattern pattern = Pattern.compile("^[+]\\d{2,2}[/]\\d{9,9}");
        Matcher matcher = pattern.matcher(phoneNum);
        if (matcher.find()) {
            return true;
        } else {
            throw new MyExceptions.InvalidPhoneNum();
        }
    }

    // név ellenőrzés
    private boolean nameCheck(String firstName, String lastName) throws Exception {
        if (!firstName.matches("^[A-Z]\\D{1,20}")) {
            throw new MyExceptions.InvalidName();
        }
        if (!lastName.matches("^[A-Z]\\D{1,20}")) {
            throw new MyExceptions.InvalidName();
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Border = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        inputPassword2 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        inputBirthDate = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        inputAccountType = new javax.swing.JComboBox<>();
        inputUsername = new javax.swing.JTextField();
        inputEmail = new javax.swing.JTextField();
        inputFirstName = new javax.swing.JTextField();
        inputLastName = new javax.swing.JTextField();
        inputPhoneNum = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        register = new javax.swing.JLabel();
        toLogin = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        exitBtn = new javax.swing.JButton();
        minBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Border.setBackground(new java.awt.Color(255, 255, 255));
        Border.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(17, 11, 47));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(17, 11, 47));
        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Felhasználónév:");
        jLabel2.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(113, 88, 226));
        jLabel3.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Jelszó:");

        inputPassword.setBackground(new java.awt.Color(17, 11, 47));
        inputPassword.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        inputPassword.setForeground(new java.awt.Color(153, 153, 153));
        inputPassword.setText("Írja be jelszavát");
        inputPassword.setBorder(null);
        inputPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputPasswordFocusGained(evt);
            }
        });
        inputPassword.setEchoChar((char)0);

        jLabel4.setBackground(new java.awt.Color(113, 88, 226));
        jLabel4.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Jelszó megismétlése:");

        inputPassword2.setBackground(new java.awt.Color(17, 11, 47));
        inputPassword2.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        inputPassword2.setForeground(new java.awt.Color(153, 153, 153));
        inputPassword2.setText("Írja be jelszavát");
        inputPassword2.setBorder(null);
        inputPassword2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputPassword2FocusGained(evt);
            }
        });
        inputPassword2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPassword2ActionPerformed(evt);
            }
        });
        inputPassword2.setEchoChar((char)0);

        jLabel5.setBackground(new java.awt.Color(113, 88, 226));
        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("E-mail:");

        jLabel6.setBackground(new java.awt.Color(113, 88, 226));
        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Családnév:");

        jLabel7.setBackground(new java.awt.Color(113, 88, 226));
        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Telefonszám:");

        jLabel8.setBackground(new java.awt.Color(113, 88, 226));
        jLabel8.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Születési idö:");

        inputBirthDate.setBackground(new java.awt.Color(17, 11, 47));
        inputBirthDate.setForeground(new java.awt.Color(255, 255, 255));
        inputBirthDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                inputBirthDatePropertyChange(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(113, 88, 226));
        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Keresztnév:");

        jLabel10.setBackground(new java.awt.Color(113, 88, 226));
        jLabel10.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Bankszámla típusa:");

        inputAccountType.setBackground(new java.awt.Color(17, 11, 47));
        inputAccountType.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        inputAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Folyószámla", "Betétszámla" }));
        inputAccountType.setOpaque(false);
        inputAccountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputAccountTypeActionPerformed(evt);
            }
        });

        inputUsername.setBackground(new java.awt.Color(17, 11, 47));
        inputUsername.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        inputUsername.setForeground(new java.awt.Color(153, 153, 153));
        inputUsername.setText("Írja be felhasználónevét");
        inputUsername.setBorder(null);
        inputUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputUsernameFocusGained(evt);
            }
        });

        inputEmail.setBackground(new java.awt.Color(17, 11, 47));
        inputEmail.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        inputEmail.setForeground(new java.awt.Color(153, 153, 153));
        inputEmail.setText("Írja be email címét");
        inputEmail.setBorder(null);
        inputEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputEmailFocusGained(evt);
            }
        });

        inputFirstName.setBackground(new java.awt.Color(17, 11, 47));
        inputFirstName.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        inputFirstName.setForeground(new java.awt.Color(153, 153, 153));
        inputFirstName.setText("Írja be családnevét");
        inputFirstName.setBorder(null);
        inputFirstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFirstNameFocusGained(evt);
            }
        });

        inputLastName.setBackground(new java.awt.Color(17, 11, 47));
        inputLastName.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        inputLastName.setForeground(new java.awt.Color(153, 153, 153));
        inputLastName.setText("Írja be keresztnevét");
        inputLastName.setBorder(null);
        inputLastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputLastNameFocusGained(evt);
            }
        });
        inputLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputLastNameActionPerformed(evt);
            }
        });

        inputPhoneNum.setBackground(new java.awt.Color(17, 11, 47));
        inputPhoneNum.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        inputPhoneNum.setForeground(new java.awt.Color(153, 153, 153));
        inputPhoneNum.setText("Írja be telefonszámát");
        inputPhoneNum.setToolTipText("A telefonszámot az alábbi formátumban adja meg: +36/xxxxxxxxx");
        inputPhoneNum.setBorder(null);
        inputPhoneNum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputPhoneNumFocusGained(evt);
            }
        });

        register.setBackground(new java.awt.Color(17, 11, 47));
        register.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        register.setForeground(new java.awt.Color(255, 255, 255));
        register.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        register.setText("Regisztráció");
        register.setOpaque(true);
        register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerMouseExited(evt);
            }
        });

        toLogin.setBackground(new java.awt.Color(17, 11, 47));
        toLogin.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        toLogin.setForeground(new java.awt.Color(255, 255, 255));
        toLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toLogin.setText("Ugrás a bejelentkezési ablakba");
        toLogin.setOpaque(true);
        toLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toLoginMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                toLoginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                toLoginMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jSeparator7)
                                        .addComponent(inputPassword2, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(inputPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(inputAccountType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inputUsername)
                                        .addComponent(inputEmail)
                                        .addComponent(inputFirstName)
                                        .addComponent(inputLastName)
                                        .addComponent(inputPhoneNum)
                                        .addComponent(inputBirthDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(register, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(toLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(0, 274, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(inputUsername))
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(inputFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputPhoneNum, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputBirthDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputAccountType, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(register, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        inputPassword.setToolTipText("A jelszónak legalább 12 karakternek kell lennie, tartalmaznia kell nagy-, kisbetűt, számot és speciális karaktert");
        inputPassword2.setToolTipText("A jelszónak legalább 12 karakternek kell lennie, tartalmaznia kell nagy-, kisbetűt, számot és speciális karaktert");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N

        exitBtn.setBackground(new java.awt.Color(255, 255, 255));
        exitBtn.setFont(new java.awt.Font("Berlin Sans FB", 0, 28)); // NOI18N
        exitBtn.setForeground(new java.awt.Color(17, 11, 47));
        exitBtn.setText("X");
        exitBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitBtnMouseExited(evt);
            }
        });
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        exitBtn.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                exitBtnPropertyChange(evt);
            }
        });

        minBtn.setBackground(new java.awt.Color(255, 255, 255));
        minBtn.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        minBtn.setForeground(new java.awt.Color(17, 11, 47));
        minBtn.setText("-");
        minBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minBtnMouseExited(evt);
            }
        });
        minBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minBtnActionPerformed(evt);
            }
        });
        minBtn.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                minBtnPropertyChange(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(17, 11, 47));
        jLabel1.setText("Regisztráció");
        jLabel1.setOpaque(true);

        jSeparator8.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(exitBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(minBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout BorderLayout = new javax.swing.GroupLayout(Border);
        Border.setLayout(BorderLayout);
        BorderLayout.setHorizontalGroup(
            BorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BorderLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(BorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );
        BorderLayout.setVerticalGroup(
            BorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BorderLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Border, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Border, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void exitBtnPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_exitBtnPropertyChange
        exitBtn.setOpaque(false);
        exitBtn.setContentAreaFilled(false);
        exitBtn.setBorderPainted(false);
    }//GEN-LAST:event_exitBtnPropertyChange

    private void minBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minBtnActionPerformed
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minBtnActionPerformed

    private void minBtnPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_minBtnPropertyChange
        minBtn.setOpaque(false);
        minBtn.setContentAreaFilled(false);
        minBtn.setBorderPainted(false);
    }//GEN-LAST:event_minBtnPropertyChange

    private void inputBirthDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_inputBirthDatePropertyChange
        inputBirthDate.validate();
    }//GEN-LAST:event_inputBirthDatePropertyChange

    private void inputAccountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputAccountTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputAccountTypeActionPerformed

    private void inputUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputUsernameFocusGained
        if (inputUsername.getText().equals("Írja be felhasználónevét")) {
            inputUsername.setText("");
        }
    }//GEN-LAST:event_inputUsernameFocusGained

    private void inputPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputPasswordFocusGained
        if (inputPassword.getText().equals("Írja be jelszavát")) {
            inputPassword.setText("");
            inputPassword.setEchoChar('•');
        }
    }//GEN-LAST:event_inputPasswordFocusGained

    private void inputPassword2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputPassword2FocusGained
        if (inputPassword2.getText().equals("Írja be jelszavát")) {
            inputPassword2.setText("");
            inputPassword2.setEchoChar('•');
        }
    }//GEN-LAST:event_inputPassword2FocusGained

    private void inputEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputEmailFocusGained
        if (inputEmail.getText().equals("Írja be email címét")) {
            inputEmail.setText("");
        }
    }//GEN-LAST:event_inputEmailFocusGained

    private void inputFirstNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputFirstNameFocusGained
        if (inputFirstName.getText().equals("Írja be családnevét")) {
            inputFirstName.setText("");
        }
    }//GEN-LAST:event_inputFirstNameFocusGained

    private void inputLastNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputLastNameFocusGained
        if (inputLastName.getText().equals("Írja be keresztnevét")) {
            inputLastName.setText("");
        }
    }//GEN-LAST:event_inputLastNameFocusGained

    private void inputPhoneNumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputPhoneNumFocusGained
        if (inputPhoneNum.getText().equals("Írja be telefonszámát")) {
            inputPhoneNum.setText("");
        }
    }//GEN-LAST:event_inputPhoneNumFocusGained

    private void inputLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputLastNameActionPerformed

    private void registerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerMouseClicked
        try {
            // szül.dátum formázása
            String pattern = "yyyy.MM.dd";
            DateFormat formatter = new SimpleDateFormat(pattern);
            // Számla fajta megnézése
            AccountType accountType = AccountType.Folyószámla;
            if (inputAccountType.getSelectedItem().toString().equals("Betétszámla")) {
                accountType = AccountType.Betétszámla;
            }
            // adatbázisba szúrás
            if (userNameCheck(inputUsername.getText()) && pwCheck(inputPassword.getText(), inputPassword2.getText()) && emailCheck(inputEmail.getText()) && phoneNumCheck(inputPhoneNum.getText()) && nameCheck(inputFirstName.getText(), inputLastName.getText())) {
                DbServices database = new DbServices();
                SHA3_256 sha256 = new SHA3_256(inputPassword.getText());
                database.register(inputUsername.getText(), inputFirstName.getText(), inputLastName.getText(), sha256.encoder(), inputEmail.getText(), inputPhoneNum.getText(), formatter.format(inputBirthDate.getDate()), 0, accountType);
                JOptionPane.showMessageDialog(null, "Sikeres regisztráció");
                toLoginMouseClicked(evt);
            }

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_registerMouseClicked

    private void toLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toLoginMouseClicked
        // bezárja a jelenlegi ablakot és megnyitja a bejelentkezési felületet
        LoginForm lgf = new LoginForm();
        lgf.setVisible(true);
        lgf.pack();
        lgf.setLocationRelativeTo(null);
        lgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_toLoginMouseClicked

    private void inputPassword2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPassword2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPassword2ActionPerformed

    private void minBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minBtnMouseEntered
        minBtn.setForeground(new Color(105,105,105));
    }//GEN-LAST:event_minBtnMouseEntered

    private void minBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minBtnMouseExited
        minBtn.setForeground(new Color(17,11,47));
    }//GEN-LAST:event_minBtnMouseExited

    private void exitBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBtnMouseEntered
        exitBtn.setForeground(Color.RED);
    }//GEN-LAST:event_exitBtnMouseEntered

    private void exitBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitBtnMouseExited
        exitBtn.setForeground(new Color(17,11,47));
    }//GEN-LAST:event_exitBtnMouseExited

    private void registerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerMouseEntered
        register.setBackground(new Color(77,128,216));
    }//GEN-LAST:event_registerMouseEntered

    private void registerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerMouseExited
        register.setBackground(new Color(17,11,47));
    }//GEN-LAST:event_registerMouseExited

    private void toLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toLoginMouseEntered
        toLogin.setBackground(new Color(77,128,216));
    }//GEN-LAST:event_toLoginMouseEntered

    private void toLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toLoginMouseExited
        toLogin.setBackground(new Color(17,11,47));
    }//GEN-LAST:event_toLoginMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Border;
    private javax.swing.JButton exitBtn;
    private javax.swing.JComboBox<String> inputAccountType;
    private com.toedter.calendar.JDateChooser inputBirthDate;
    private javax.swing.JTextField inputEmail;
    private javax.swing.JTextField inputFirstName;
    private javax.swing.JTextField inputLastName;
    private javax.swing.JPasswordField inputPassword;
    private javax.swing.JPasswordField inputPassword2;
    private javax.swing.JTextField inputPhoneNum;
    private javax.swing.JTextField inputUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JButton minBtn;
    private javax.swing.JLabel register;
    private javax.swing.JLabel toLogin;
    // End of variables declaration//GEN-END:variables
}
